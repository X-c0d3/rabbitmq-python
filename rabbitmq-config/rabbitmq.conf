## Cluster formation. See http://www.rabbitmq.com/cluster-formation.html to learn more
#loopback_users.guest = false
listeners.tcp.default = 5672

# Enable AMQPS
listeners.ssl.default = 5671
ssl_options.cacertfile = /etc/rabbitmq/ssl/ca_certificate.pem
ssl_options.certfile = /etc/rabbitmq/ssl/server_certificate.pem
ssl_options.keyfile = /etc/rabbitmq/ssl/server_key.pem
ssl_options.verify = verify_peer
ssl_options.fail_if_no_peer_cert = true


# Enable HTTPS
management.listener.port = 15671
management.listener.ssl = true
management.listener.ssl_opts.cacertfile = /etc/rabbitmq/ssl/ca_certificate.pem
management.listener.ssl_opts.certfile = /etc/rabbitmq/ssl/server_certificate.pem
management.listener.ssl_opts.keyfile = /etc/rabbitmq/ssl/server_key.pem



; cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
; cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
; cluster_formation.k8s.address_type = hostname
; cluster_formation.node_cleanup.only_log_warning = true

; # cluster_formation.k8s.service_name = rabbitmq-dev
; #cluster_formation.k8s.hostname_suffix = .rabbitmq-dev.dev.svc.cluster.local
; cluster_formation.node_cleanup.interval = 10
; cluster_partition_handling = autoheal
; queue_master_locator=min-masters

management.load_definitions = /etc/rabbitmq/definitions.json